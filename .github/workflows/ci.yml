name: ci
on: [push, pull_request]
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: astral-sh/setup-uv@v3

      - name: Install + build + test (single step)
        run: |
          uv python install 3.11
          uv venv .venv
          . .venv/bin/activate
          uv pip install -r requirements.txt
          uv pip install pytest pyarrow

          # Generate demo data
          python data/generate_ab_events.py --out data/events.parquet

          # Create design.json
          python - <<'PY'
          from src.design.brief_to_design import build_design, save_design
          import pathlib
          pathlib.Path("artifacts").mkdir(exist_ok=True)
          d = build_design(
              brief="Show new onboarding tooltip to improve activation",
              primary_metric="activation_rate",
              baseline=0.25, mde=0.03, power=0.80, alpha=0.05,
              glossary_path="docs/metric_glossary.json"
          )
          save_design(d, "artifacts/design.json")
          print("Wrote artifacts/design.json")
          PY

          # Generate SQL
          python -m src.sql.gen --schema data/schema.json --design artifacts/design.json --out artifacts/sql

          # Execute SQL with DuckDB -> CSVs
          python - <<'PY'
          import duckdb, pathlib
          sql_dir = pathlib.Path("artifacts/sql")
          db = duckdb.connect()
          def run(file, out_csv):
              q = (sql_dir / file).read_text()
              df = db.execute(q).df()
              (sql_dir / out_csv).write_text(df.to_csv(index=False))
          run("01_assignment_check.sql", "assignment_check.csv")
          run("02_primary_metric.sql", "activation_rate.csv")
          # guardrail file might not exist in older commits; ignore if missing
          try:
              run("03_guardrail_crash_rate.sql", "crash_rate.csv")
          except FileNotFoundError:
              pass
          PY

          # CUPED (prints metrics; non-blocking)
          python -m src.experiments.cuped --csv data/ab_demo.csv || true

          # Optional: build the one-pager if script exists
          [ -f tools_make_readout.py ] && python tools_make_readout.py || true

          # Tests
          pytest -q

      - name: Upload artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: ab-copilot-artifacts
          path: |
            artifacts/**
            data/ab_demo.csv
